{"version":3,"file":"particle.component.spec.js","sourceRoot":"","sources":["particle.component.spec.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,wBAOO,uBAAuB,CAAC,CAAA;AAC/B,wBAAuD,2BAA2B,CAAC,CAAA;AACnF,qBAA0B,eAAe,CAAC,CAAA;AAC1C,iCAAmB,2BAA2B,CAAC,CAAA;AAC/C,mCAAkC,sBAAsB,CAAC,CAAA;AAEzD,kBAAQ,CAAC,qBAAqB,EAAE;IAC9B,IAAI,OAA6B,CAAC;IAElC,6BAAmB,CAAC,cAAM,OAAA,CAAC,sCAAiB,CAAC,EAAnB,CAAmB,CAAC,CAAC;IAC/C,oBAAU,CAAC,gBAAM,CAAC,CAAC,8BAAoB,CAAC,EAAE,UAAU,GAAyB;QAC3E,OAAO,GAAG,GAAG,CAAC;IAChB,CAAC,CAAC,CAAC,CAAC;IAEJ,YAAE,CAAC,6BAA6B,EAAE,gBAAM,CAAC,CAAC,sCAAiB,CAAC,EACxD,UAAC,SAA4B;QAC/B,gBAAM,CAAC,SAAS,CAAC,CAAC,UAAU,EAAE,CAAC;IACjC,CAAC,CAAC,CAAC,CAAC;IAEJ,YAAE,CAAC,6BAA6B,EAAE,gBAAM,CAAC,EAAE,EAAE;QAC3C,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,+BAA+B,CAAC;aACxD,IAAI,CAAC,UAAC,OAA8B;YACnC,IAAI,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,sCAAiB,CAAC,CAAC,CAAC;YACxE,gBAAM,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;YAC3B,gBAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,UAAU,EAAE,CAAC;QAC/C,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC;AASH;IAAA;IACA,CAAC;IARD;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,MAAM;YAChB,QAAQ,EAAE,iCAET;YACD,UAAU,EAAE,CAAC,sCAAiB,CAAC;SAChC,CAAC;;uCAAA;IAEF,sCAAC;AAAD,CAAC,AADD,IACC","sourcesContent":["import {\n  beforeEach,\n  beforeEachProviders,\n  describe,\n  expect,\n  it,\n  inject,\n} from '@angular/core/testing';\nimport { ComponentFixture, TestComponentBuilder } from '@angular/compiler/testing';\nimport { Component } from '@angular/core';\nimport { By } from '@angular/platform-browser';\nimport { ParticleComponent } from './particle.component';\n\ndescribe('Component: Particle', () => {\n  let builder: TestComponentBuilder;\n\n  beforeEachProviders(() => [ParticleComponent]);\n  beforeEach(inject([TestComponentBuilder], function (tcb: TestComponentBuilder) {\n    builder = tcb;\n  }));\n\n  it('should inject the component', inject([ParticleComponent],\n      (component: ParticleComponent) => {\n    expect(component).toBeTruthy();\n  }));\n\n  it('should create the component', inject([], () => {\n    return builder.createAsync(ParticleComponentTestController)\n      .then((fixture: ComponentFixture<any>) => {\n        let query = fixture.debugElement.query(By.directive(ParticleComponent));\n        expect(query).toBeTruthy();\n        expect(query.componentInstance).toBeTruthy();\n      });\n  }));\n});\n\n@Component({\n  selector: 'test',\n  template: `\n    <particle></particle>\n  `,\n  directives: [ParticleComponent]\n})\nclass ParticleComponentTestController {\n}\n\n"]}