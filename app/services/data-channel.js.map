{"version":3,"file":"data-channel.js","sourceRoot":"","sources":["data-channel.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/operator/share';\n\ndeclare let Firebase:any;\n\n@Injectable()\nexport class DataChannel {\n\n  public id: string;\n  public key: string;\n  public name: string;\n  public conf: any;\n  public db: any;\n  public url: string;\n  public stun: any;\n  public remotePeer: any;\n  public observer: Observable<any>;\n  public channelObserver: Observer<any>;\n  public peerConnection: any;\n  public hasPulse: boolean;\n  public isOpen: boolean;\n  public channel: any;\n  public channels: any;\n  public dataChannel: any;\n  public emitter: EventEmitter<any>;\n  public connections: any;\n  public debug : boolean;\n  public isWebSocket: boolean;\n  public count : number;\n  public store : {\n    messages: any\n  };\n\n  constructor(private _key: string,\n              private _id: string,\n              private _url: string) {\n\n    var self = this;\n    this.id = _id || Math.random().toString().replace('.', ''); // the username, unique id that makes each peer => make uuid?\n    this.key = _key || '1234'; // the room name.\n    this.url = _url; // replace with your server name\n    this.name = 'channel'; // the name of the channel\n    this.db = new Firebase(this.url); // only supports Firebase for now, support for custom web socket server in the future.\n    this.count = 0;\n\n    this.hasPulse = false;\n    this.isOpen = false;\n    this.connections = {};\n    this.remotePeer = null;\n    this.isWebSocket = false;\n    this.debug = false;\n    \n\n    this.store = { messages: [] };\n\n    this.stun = {\n      iceServers: [{\n        url: 'stun:stun.l.google.com:19302'\n      }]\n    };\n\n    this.conf = {\n      ordered: false,\n      maxRetransmitTime: 1000\n    };\n\n\n    this.channels = {\n      announce: this.db.child('announce'),\n      signal: this.db.child('messages').child(this.id)\n    };\n\n    this.channels.signal.on('child_added', this.onSignal.bind(self));\n    this.channels.announce.on('child_added', this.onAnnounce.bind(self));\n\n    this.emitter = new EventEmitter();\n    this.observer = new Observable( observer => this.channelObserver = observer ).share();\n\n    this.sendAnnounce();\n\n  }\n\n  sendAnnounce() {\n    \n    var RTCPeerConnection =  (<any>window).RTCPeerConnection ||  (<any>window).mozRTCPeerConnection ||\n                      (<any>window).webkitRTCPeerConnection;\n    var msg = {\n        sharedKey: this.key,\n        id: this.id,\n        method: !RTCPeerConnection ? 'socket' : 'webrtc'\n      };\n      \n    if(!RTCPeerConnection) {\n      this.isWebSocket = true;\n    }\n                       \n    this.channels.announce.remove(()=>{\n      this.channels.announce.push(msg);\n      if(this.debug) console.log('Announced our sharedKey is ' + this.key);\n      if(this.debug) console.log('Announced our ID is ' + this.id);\n    });\n \n  }\n\n  onAnnounce(snapshot) {\n    \n    var msg = snapshot.val();\n    if (msg.id != this.id && msg.sharedKey == this.key) {\n      \n      if(this.debug) console.log('Discovered matching announcement from ' + msg.id);\n      this.remotePeer = msg.id;\n      \n      if(msg.method === 'webrtc' && this.isWebSocket === false) {\n          this.init();\n          this.connect();\n      } else {\n        this.sendSignal({\n          id: this.id,\n          key: this.key,\n          url: this.url,\n          type: 'ws-offer'\n        });\n        if(!this.isOpen) {\n          this.initSocket(msg);\n        }\n      }\n       \n    }\n    \n  }\n  \n  sendSignal(msg) {\n    \n    msg.sender = this.id;\n    this.db.child('messages').child(this.remotePeer).push(msg);\n    \n  }\n\n  onOffer(msg) {\n    \n    var RTCSessionDescription = (<any>window).RTCSessionDescription ||  (<any>window).mozRTCSessionDescription;\n    this.hasPulse = true;\n    if(this.debug) console.log('Client has pulse');\n    this.remotePeer = msg.sender;\n    this.init();\n    this.sendCandidates();\n    this.peerConnection.setRemoteDescription(new RTCSessionDescription(msg));\n    this.peerConnection.createAnswer((sessionDescription) => {\n      if(this.debug) console.log('Sending answer to ' + msg.sender);\n      this.peerConnection.setLocalDescription(sessionDescription);\n      this.sendSignal(sessionDescription.toJSON());\n    }, function(err) {\n      if(this.debug) console.error('Could not create offer', err);\n    });\n    \n  }\n\n  onAnswerSignal(msg) {\n    \n    var RTCSessionDescription =  (<any>window).RTCSessionDescription ||  (<any>window).mozRTCSessionDescription;\n    if(this.debug) console.log('Handling answer from '+ this.remotePeer);\n    this.peerConnection.setRemoteDescription(new RTCSessionDescription(msg));\n    \n  }\n\n  onCandidateSignal(msg) {\n    var candidate = new  (<any>window).RTCIceCandidate(msg);\n    if(this.debug) console.log('Adding candidate to peerConnection: '+ this.remotePeer);\n    this.peerConnection.addIceCandidate(candidate);\n  }\n\n  onSignal(snapshot) {\n\n    var msg = snapshot.val();\n    var sender = msg.sender;\n    var type = msg.type;\n\n    if(!this.isOpen) {\n      if(this.debug) console.log('Received a \\'' + type + '\\' signal from ' + sender + ' of type ' + type);\n      if(type == 'message') {\n        this.onWebSocketMessage(msg);\n      }\n      if(type == 'ws-offer') {\n        if(!this.isOpen) {\n          this.initSocket(msg);\n        }\n      }\n      if (type == 'offer') {\n        this.onOffer(msg);\n      }\n      else if (type == 'answer') {\n        this.onAnswerSignal(msg);\n      }\n      else if (type == 'candidate' && this.hasPulse) {\n        this.onCandidateSignal(msg);\n      }\n    }\n\n  }\n\n  sendCandidates() {\n    \n    this.peerConnection.onicecandidate = this.onICECandidate.bind(this);\n    \n  }\n\n  onICEStateChange() {\n    \n    if (this.peerConnection.iceConnectionState == 'disconnected') {\n      if(this.debug) console.log('Client disconnected!');\n      this.sendAnnounce();\n    }\n    \n  }\n\n  onICECandidate(ev) {\n    \n    var candidate = ev.candidate;\n    if (candidate) {\n      candidate = candidate.toJSON();\n      candidate.type = 'candidate';\n      if(this.debug) console.log('Sending candidate to ' + this.remotePeer);\n      this.sendSignal(candidate);\n    } else {\n      if(this.debug) console.log('All candidates sent');\n    }\n    \n  }\n\n  onDataChannel(ev) {\n    \n    ev.channel.onmessage = this.onDataChannelMessage.bind(this);\n    \n  }\n  \n  onDataChannelOpen() {\n    \n\n\n    if(this.debug) console.log('Data channel created! The channel is: '+ this.channel.readyState);\n\n    if(this.channel.readyState == 'open') {\n\n      this.isOpen = true;\n      this.emitter.emit('open');\n\n    }\n    \n\n  }\n\n  onDataChannelClosed() {\n    \n    if(this.debug) console.log('The data channel has been closed!');\n    \n  }\n  \n\n  onDataChannelMessage(ev) {\n\n    this.store.messages.push({\n      id: this.count++,\n      data: JSON.parse(ev.data),\n      sender: this.remotePeer,\n      createdAt: new Date()\n    });\n   \n    this.channelObserver.next(this.store.messages);\n    if(this.debug) console.log('Received Message: ' + ev.data);\n\n  }\n  \n  onWebSocketMessage(ev) {\n\n    this.store.messages.push({\n      id: this.count++,\n      data: JSON.parse(ev.data),\n      sender: ev.sender,\n      createdAt: new Date()\n    });\n    \n    console.log(JSON.parse(ev.data));\n  \n    this.channelObserver.next(this.store.messages);\n    if(this.debug) console.log('Received Message: ' + ev.data);\n    \n  }\n  \n  onWebSocketSignal(snapshot) {\n\n    var msg = snapshot.val();\n    var sender = msg.sender;\n    var type = msg.type;\n    console.log(msg);\n    if( sender === this.remotePeer ) {\n      if(this.debug) console.log('Received a \\'' + type + '\\' signal from ' + sender + ' of type ' + type);\n      if(type == 'message') {\n        this.onWebSocketMessage(msg);\n      }\n      if(type == 'ws-offer') {\n        this.initSocket(msg);\n      }\n      if (type == 'offer') {\n        this.onOffer(msg);\n      }\n      else if (type == 'answer') {\n        this.onAnswerSignal(msg);\n      }\n      else if (type == 'candidate' && this.hasPulse) {\n        this.onCandidateSignal(msg);\n      }\n    }\n    \n\n  }\n\n  \n  sendSocketMessage(data: any) {\n    \n     let msg = {\n       type: 'message',\n       sender: this.id,\n       data: data\n     }\n     \n     console.log(msg);\n     \n     if(this.debug) console.log('Sending WebSocket message from: '+msg.sender+ ' to: '+this.remotePeer);\n     this.db.child('messages').child(this.remotePeer).push(msg);\n     \n  }\n  \n  createWebSocketChannel() {\n    \n    return {\n      send: this.sendSocketMessage.bind(this)\n    }\n    \n  }\n\n\n  connect() {\n\n    this.sendCandidates();\n\n    this.peerConnection.createOffer((sessionDescription) => {\n      if(this.debug) console.log('Sending offer to ' + this.remotePeer);\n      this.peerConnection.setLocalDescription(sessionDescription);\n      this.sendSignal(sessionDescription.toJSON());\n    }, function(err) {\n      console.error('Could not create offer for ' + this.remotePeer, err);\n    });\n\n  }\n\n\n  init() {\n\n    var RTCPeerConnection =  (<any>window).RTCPeerConnection ||  (<any>window).mozRTCPeerConnection ||\n                         (<any>window).webkitRTCPeerConnection;\n\n    this.peerConnection = new RTCPeerConnection(this.stun);\n    this.peerConnection.ondatachannel = this.onDataChannel.bind(this);\n    this.peerConnection.oniceconnectionstatechange = this.onICEStateChange.bind(this);\n    this.channel = this.peerConnection.createDataChannel(this.name, this.conf);\n    this.channel.onopen = this.onDataChannelOpen.bind(this);\n    this.channel.onmessage = this.onDataChannelMessage.bind(this);\n    this.connections[this.remotePeer] = this.peerConnection;\n\n    if(this.debug) console.log('Setting up peer connection with ' + this.remotePeer);\n\n  }\n  \n  initSocket(conf: any) {\n    \n    this.remotePeer = conf.id;\n    \n    if(!this.isOpen) {\n      \n      this.isOpen = true;\n      this.emitter.emit('open');\n      \n      this.channel = this.createWebSocketChannel();  \n      this.channels.websocket = this.db.child('messages').child(this.id);\n      this.channels.websocket.on('child_added', this.onWebSocketSignal.bind(this));\n\n      this.hasPulse = true;\n      if(this.debug) console.log('Client has pulse');\n      if(this.debug) console.log('Setting up websocket connection with ' + this.remotePeer);\n    }\n\n  }\n\n}\n"]}