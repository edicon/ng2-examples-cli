{"version":3,"file":"particle.scene.js","sourceRoot":"","sources":["particle.scene.ts"],"names":[],"mappings":"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","sourcesContent":["import { Scene } from '../models/terrain';\n\ndeclare let THREE:any;\ndeclare let System:any;\n\n\nexport class ParticleWorld {\n  \n\n  angle: number;\n  width: number;\n  height: number;\n  aspect: number;\n  frame: number;\n  speed: number;\n  clock: any;\n  scene: any;\n  camera: any;\n  controls: any;\n  renderer: any;\n  sunLight: any;\n  sunLightHelper: any;\n  shadowLight: any;\n  mesh: any;\n  uiControls: any;\n  elem: any;\n  projector: any;\n  controlsVector: any;\n  raycaster: any;\n  intersects: any;\n  geometry: any;\n  material: any;\n  composer: any;\n  renderPass: any;\n  particleCloud: any;\n  particleLine: any;\n  \n  constructor(light: boolean, helper: boolean) {\n    \n      var s = this,\n          i = 0;\n\n      this.angle = Math.PI / 180;\n\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      this.aspect = this.width / this.height;\n\n      this.frame = 0;\n      this.speed = this.frame / 100;\n\n      this.clock = new THREE.Clock();\n\n      this.scene = new THREE.Scene();\n      this.scene.fog = new THREE.Fog(0x000000, 0.001, 10);\n\n      this.camera = new THREE.PerspectiveCamera(90, s.width / s.height, 0.1, 10);\n\n      this.camera.position.y = 0.8;\n      this.camera.position.z = 2;\n\n      this.camera.lookAt(new THREE.Vector3(0,0,0));\n\n\n      this.renderer = new THREE.WebGLRenderer({antialias: true});\n      this.renderer.setClearColor(0x000000);\n      this.renderer.setSize(s.width, s.height);\n      this.renderer.shadowMap.enabled = true;\n      this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n      this.geometry = new THREE.Geometry();\n \n      this.geometry.verticesNeedUpdate = true;\n      \n      let circle = new THREE.TextureLoader().load('/assets/img/circle.svg');\n      let pointmat = new THREE.PointsMaterial({ fog: true, size: 0.1, map: circle, transparent: true, alphaTest: 0.15})\n      let linemat = new THREE.LineBasicMaterial({ fog: true, color: 0xffffff, linewidth: 2 });\n\n\n      // let geo = new THREE.BoxGeometry( 1, 1, 1 );\n      // this.material = new THREE.MeshPhongMaterial( {\n      //   color: 0xefefef,\n      //   shininess: 0.0,\n      //   specular: 0xefefef,\n      //   shading: THREE.SmoothShading\n      // });\n\n      // this.mesh = new THREE.Mesh( geo, this.material );\n      // this.mesh.position.x = 0;\n      // this.mesh.position.y = 0;\n      // this.mesh.position.z = 0;\n      // this.mesh.castShadow = true;\n      \n      // this.scene.add(this.mesh);\n      \n      this.sunLight = new THREE.AmbientLight( 0x404040 ); // soft white light\n      this.scene.add( this.sunLight );\n      \n      this.shadowLight = new THREE.SpotLight(0xffffff);\n      this.shadowLight.position.set(-10, 10, -10);\n      this.shadowLight.castShadow = true;\n      this.scene.add(this.shadowLight);\n      \n      for (let i=0; i < 500; i++){\n        let pos = new THREE.Vector3(this.randomPosition(-10,10), this.randomPosition(-10,10), this.randomPosition(-10,10));\n        this.geometry.vertices.push(pos);  \n      }\n      \n      this.particleCloud = new THREE.Points(this.geometry, pointmat);\n      this.scene.add(this.particleCloud);\n\n      this.particleLine = new THREE.Line(this.geometry, linemat);\n      this.scene.add(this.particleLine);\n      \n      \n      if(helper) {\n        var gridHelper = new THREE.GridHelper( 10, 1 );\n        gridHelper.rotation.x = 1.5708;\n        gridHelper.setColors (0x00ff00, 0x004400);\n        this.scene.add( gridHelper );\n      }\n\n\n\n\n      window.addEventListener('resize', function(){\n\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.aspect = this.width / this.height;\n        this.elem.setAttribute('width', this.width);\n        this.elem.setAttribute('height', this.height);\n\n      }.bind(this));\n      \n      Promise.all([\n        \n        System.import('/vendor/three/examples/js/shaders/CopyShader.js'),\n        System.import('/vendor/three/examples/js/shaders/ConvolutionShader.js'),\n        System.import('/vendor/three/examples/js/shaders/BokehShader.js'),\n        System.import('/vendor/three/examples/js/shaders/DotScreenShader.js'),\n        System.import('/vendor/three/examples/js/postprocessing/EffectComposer.js')\n      ]).then(function(){\n        \n        return Promise.all([\n        System.import('/vendor/three/examples/js/postprocessing/MaskPass.js'),\n        System.import('/vendor/three/examples/js/postprocessing/RenderPass.js'),\n        System.import('/vendor/three/examples/js/postprocessing/ShaderPass.js'),\n        System.import('/vendor/three/examples/js/postprocessing/BokehPass.js')]);\n        \n      }).then(function(){\n                \n        s.composer = new THREE.EffectComposer(s.renderer);\n\n        s.renderPass = new THREE.RenderPass(s.scene, s.camera);\n        s.composer.addPass(s.renderPass);\n        \n        // // var dotScreenEffect = new THREE.ShaderPass( THREE.DotScreenShader );\n        // // dotScreenEffect.uniforms[ 'scale' ].value = 4;\n        // // dotScreenEffect.renderToScreen = true;\n        // // s.composer.addPass( dotScreenEffect );\n        \n        // var bokeh = new THREE.BokehPass(s.scene, s.camera, {\n        //   focus: 0.01,\n        //   aspect: s.camera.aspect,\n        //   aperture: 0.015,\n        //   maxblur: 0.5\n        // });\n        // bokeh.renderToScreen = true;\n        // s.composer.addPass( bokeh );\n\n      \n       });\n\n\n    }\n    \n    \n    render() {\n      let delta = this.clock.getDelta();\n\n      this.particleCloud.rotation.y += 0.0001;\n      this.particleLine.rotation.y += 0.0001;\n      \n      // if( this.composer !== undefined ) {\n      //    this.composer.render(delta);\n      // }\n      this.renderer.render(this.scene, this.camera);\n    }\n\n\n    update() {\n\n      this.frame++;\n\n      window.requestAnimationFrame(this.update.bind(this));\n      this.render();\n\n    }\n    \n    setContainer (elem) {\n      \n      this.elem = elem;\n      this.elem.appendChild(this.renderer.domElement);\n\n    }\n    \n    randomPosition(min, max){\n      return (Math.random() * (max - min + 1)) + min;\n    }\n\n   \n}"]}