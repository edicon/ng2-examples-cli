{"version":3,"file":"terrain.scene.js","sourceRoot":"","sources":["terrain.scene.ts"],"names":[],"mappings":"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","sourcesContent":["import { Scene } from '../models/terrain';\n\ndeclare let THREE:any;\n\n\nexport class TerrainWorld {\n  \n  x: number;\n  y: number;\n  z: number;\n  angle: number;\n  width: number;\n  height: number;\n  aspect: number;\n  frame: number;\n  speed: number;\n  clock: any;\n  scene: any;\n  camera: any;\n  controls: any;\n  renderer: any;\n  sunLight: any;\n  sunLightHelper: any;\n  shadowLight: any;\n  mesh: any;\n  uiControls: any;\n  elem: any;\n  projector: any;\n  controlsVector: any;\n  raycaster: any;\n  intersects: any;\n  \n  constructor(light: boolean, helper: boolean) {\n    \n      var s = this,\n          i = 0;\n\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.angle = Math.PI / 180;\n\n      this.width = window.innerWidth;\n      this.height = window.innerHeight;\n      this.aspect = this.width / this.height;\n\n      this.frame = 0;\n      this.speed = this.frame / 100;\n\n\n      this.clock = new THREE.Clock();\n\n      this.scene = new THREE.Scene();\n      this.scene.fog = new THREE.FogExp2(0xd6f1f1, 0.001);\n\n      this.camera = new THREE.PerspectiveCamera(90, s.width / s.height, 0.1, 1000);\n\n      this.camera.position.y = 0.8;\n\n      this.camera.lookAt(new THREE.Vector3(0,0,0));\n\n      this.controls = new THREE.FirstPersonControls( this.camera );\n      this.controls.movementSpeed = 4;\n      this.controls.lookSpeed = 0.05;\n      this.controls.noFly = true;\n      this.controls.lookVertical = false;\n      \n      this.raycaster = new THREE.Raycaster();\n      this.controlsVector = new THREE.Vector3(0, 0, 0);\n      this.controlsVector.unproject( this.camera );\n\n\n      this.renderer = new THREE.WebGLRenderer({antialias: true});\n      this.renderer.setClearColor(new THREE.Color(0x121212, 1.0));\n      this.renderer.setSize(s.width, s.height);\n      this.renderer.shadowMap.enabled = true;\n      this.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n      // Skybox\n\n      var cubeTexLoader = new THREE.CubeTextureLoader();\n\n      var urls = [ '/assets/skybox/posz.jpg',\n                  '/assets/skybox/negz.jpg',\n                  '/assets/skybox/posy.jpg',\n                  '/assets/skybox/negy.jpg',\n                  '/assets/skybox/posx.jpg',\n                  '/assets/skybox/negx.jpg' ];\n\n      cubeTexLoader.load( urls, function(tex) {\n          var cubeShader = THREE.ShaderLib.cube;\n          cubeShader.uniforms.tCube.value = tex;\n\n          var skyBoxMaterial = new THREE.ShaderMaterial({\n              fragmentShader: cubeShader.fragmentShader,\n              vertexShader: cubeShader.vertexShader,\n              uniforms: cubeShader.uniforms,\n              depthWrite: false,\n              side: THREE.BackSide\n          });\n          var skyBoxGeo = new THREE.BoxGeometry( 10, 10, 10, 1, 1, 1 );\n\n          this.skyMesh = new THREE.Mesh( skyBoxGeo, skyBoxMaterial );\n          this.skyMesh.scale.set( 100, 100, 100 );\n          this.skyMesh.position.set ( 0, 0, 0 );\n          this.scene.add( this.skyMesh );\n\n      }.bind(this));\n\n      this.sunLight = new THREE.DirectionalLight(0xd63710, 10);\n      this.sunLight.position.set(-300, 100, -400);\n      this.sunLight.position.multiplyScalar(5.0);\n\n      this.sunLight.castShadow = true;\n      // this.sunLight.shadowCameraVisible = true;\n      this.sunLightHelper = new THREE.CameraHelper( this.sunLight.shadow.camera );\n\n      this.sunLight.shadow.mapSize.width = 512;\n      this.sunLight.shadow.mapSize.height = 512;\n\n      this.sunLight.lookAt( new THREE.Vector3(0,0,0) );\n\n      this.scene.add(this.sunLight);\n\n      this.shadowLight = new THREE.AmbientLight( 0x0000ff );\n      this.shadowLight.intensity = 0.33336;\n      this.scene.add( this.shadowLight );\n\n      var ratio;\n      var geometry = new THREE.PlaneGeometry(20, 20, 120, 120);\n      // var geometry = new THREE.SphereGeometry(20, 120, 120);\n      geometry.verticesNeedUpdate = true;\n      // create a simple square shape. We duplicate the top left and bottom right\n      // vertices because each vertex needs to appear once per triangle.\n\n      var material = new THREE.MeshPhongMaterial( {\n        color: 0xefefef,\n        shininess: 0.0,\n        // specular: 0xefefef,\n        shading: THREE.SmoothShading,\n        // emissive: 0x2323ef\n      });\n\n      // var material = new THREE.MeshPhongMaterial( { color: 0xffffff, emissive: 0xffffff, fog: true, wireframeLinewidth: 1, wireframe: false, shading: THREE.FlatShading } );\n\n      this.mesh = new THREE.Mesh( geometry, material );\n      this.mesh.rotation.x = -Math.PI/2;\n      this.mesh.position.y = -1;\n      this.mesh.castShadow = true;\n\n      var scene = new Scene();\n      \n       scene.fetch('models/death-valley.dem').then(function(data){\n\n        //ratio = Math.round(Math.sqrt(data[0].length));\n        ratio = 36;\n        console.log(ratio, Math.sqrt(this.mesh.geometry.vertices.length), data[1]);\n\n        this.mesh.geometry = new THREE.PlaneGeometry(ratio, ratio, ratio, ratio);\n\n        for (var i = 0, l = this.mesh.geometry.vertices.length; i < l; i++) {\n          this.mesh.geometry.vertices[i].z = data[0][i] / 12000;\n          //console.log(mesh.geometry.vertices[i]);\n        }\n\n        this.mesh.geometry.verticesNeedUpdate = true;\n        this.mesh.geometry.normalsNeedUpdate = true;\n        this.mesh.geometry.computeVertexNormals();\n        // this.mesh.geometry.computeFaceNormals();\n\n      }.bind(this));\n\n      this.scene.add(this.mesh);\n      \n      \n      if(helper) {\n        var gridHelper = new THREE.GridHelper( 10, 1 );\n        gridHelper.rotation.x = 1.5708;\n        gridHelper.setColors (0x00ff00, 0x004400);\n        this.scene.add( gridHelper );\n      }\n\n\n      this.update();\n\n      window.addEventListener('resize', function(){\n\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n        this.aspect = this.width / this.height;\n        this.elem.setAttribute('width', this.width);\n        this.elem.setAttribute('height', this.height);\n\n      }.bind(this));\n\n      this.controls.update(this.clock.getDelta());\n      console.log(this.controls);\n\n    }\n\n\n    update() {\n  \n      this.controls.update(this.clock.getDelta());\n\n      // this.raycaster.set( this.camera.position, this.controlsVector.sub( this.camera.position ).normalize() );\n      // this.intersects = this.raycaster.intersectObjects( [this.mesh] );\n      \n      this.mesh.geometry.verticesNeedUpdate = true;\n      this.mesh.geometry.normalsNeedUpdate = true;\n      this.mesh.geometry.computeVertexNormals();\n      this.mesh.geometry.computeFaceNormals();\n\n      this.renderer.render(this.scene, this.camera);\n\n      this.frame++;\n\n      window.requestAnimationFrame(this.update.bind(this));\n\n    }\n    \n    setContainer (elem) {\n      \n      this.elem = elem;\n      this.elem.appendChild(this.renderer.domElement);\n\n    }\n\n    setUIControls (controls) {\n\n      this.uiControls = controls;\n\n   };\n   \n}"]}